---
- name: set default grub flag values
  set_fact:
    hugepages_flags: ""

- name: validate default hugepage size setting
  assert: { that: default_hugepage_size == "2M" or default_hugepage_size == "1G" }
  when: hugepages_enabled | default(false)

- name: validate that any hugepages of default size are requested
  assert: { that: hugepages_1G > 0 }
  when:
    - hugepages_enabled | default(false)
    - default_hugepage_size == "1G"

- name: validate that any hugepages of default size are requested
  assert: { that: hugepages_2M > 0 }
  when:
    - default_hugepage_size == "2M"
    - hugepages_enabled | default(false)

- name: set hugepages kernel boot flags
  set_fact:
    hugepages_flags: >-
      default_hugepagesz={{ default_hugepage_size }}
      {% if hugepages_1G > 0 %}hugepagesz=1G hugepages={{ hugepages_1G | int }}{% endif %}
      {% if hugepages_2M > 0 %}hugepagesz=2M hugepages={{ hugepages_2M | int }}{% endif %}
  when:
    - hugepages_enabled | default(false)

- name: set hugepages kernel boot flags in /etc/default/grub
  lineinfile:
    dest: /etc/default/grub
    regexp: '^GRUB_CMDLINE_LINUX="(?!.* default_hugepagesz=)(.*)"'
    line: 'GRUB_CMDLINE_LINUX="\1 {{ hugepages_flags }}"'
    state: present
    backrefs: yes
  register: hugepages_parameters
  when:
    - hugepages_flags | length > 0

- name: update grub.cfg on Debian-based distro
  command: update-grub
  notify:
   - reboot server
  when:
    - ansible_os_family == "Debian"
    - hugepages_parameters.changed

- name: update grub.cfg
  command: "[ -f {{ item }} ] && grub2-mkconfig -o {{ item }}"
  notify:
   - reboot server
  when:
    - ansible_os_family == "RedHat"
    - hugepages_parameters.changed
  with_items:
    - /etc/grub2.cfg
    - /etc/grub2-efi.cfg

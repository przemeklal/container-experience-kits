---
- name: install dependencies
  include_role:
    name: install-dependencies

- name: download DPDK
  unarchive:
    src: "{{ dpdk_url }}"
    dest: "/usr/src"
    remote_src: yes
    list_files: yes
  register: dpdk_download

- name: set local dpdk directory path
  set_fact:
    dpdk_dir: "{{ dpdk_download.dest  }}/{{ dpdk_download.files[0] }}"

- name: run make config
  make:
    chdir: "{{ dpdk_dir }}"
    target: config
    params:
      T: "{{ dpdk_target }}"

- name: enable virtio-user support
  lineinfile:
    path: "{{ dpdk_dir }}/build/.config"
    regexp: '^CONFIG_RTE_VIRTIO_USER'
    line: 'CONFIG_RTE_VIRTIO_USER=y'

- name: enable PCAP PMD support
  lineinfile:
    path: "{{ dpdk_dir }}/build/.config"
    regexp: '^CONFIG_RTE_LIBRTE_PMD_PCAP'
    line: 'CONFIG_RTE_LIBRTE_PMD_PCAP=y'

- name: build DPDK
  make:
    target: install
    chdir: "{{ dpdk_dir }}"
    params:
      T: "{{ dpdk_target }}"
      DESTDIR: install
      prefix: "/usr"

- name: find dpdk tools
  find:
    path: "{{ dpdk_dir }}"
    patterns: "dpdk-devbind.py"
    recurse: yes
  register: dpdk_tools_dir

- set_fact:
    dpdk_tools: "{{ dpdk_tools_dir.files[0].path }}"

- name: load userspace modules
  modprobe:
    name: "{{ item }}"
    state: present
  with_items:
    - vfio-pci
    - uio

- name: load intel module
  command: "insmod {{ dpdk_dir }}install/lib/modules/{{ ansible_kernel }}/extra/dpdk/igb_uio.ko"
  register: result
  failed_when: "'No such file or directory' in result.stderr"
